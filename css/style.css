/* ==========================================================================

  DEFAULT CSS version 0.93 BETA  

   CC0 1.0 Universal | This work has been marked as dedicated to the public domain.

    By marking the work with a CC0 public domain dedication, the creator is giving up their copyright and allowing reusers to distribute, remix, adapt, and build upon the material in any medium or format, even for commercial purposes.
  
    ========================================================================== */


/* ==========================================================================

  Place font @import rules at top of the CSS stylesheet. They will not work reliably if placed elsewhere in this file.
  Best practice is to use the <link> tag in the HTML <head> instead. @import rules slow down the browser.

   @import url();

  ========================================================================== */
  /*

1. Mobile First - GLOBAL styles that apply to all screen sizes
	  1.1 - Boxes
	  1.2 - Backgrounds
	  1.3 - Typography
	  1.4 - Colors
	  etc... arrange to your liking.

2. Media Queries - Set breakpoints according to your design's needs

  Resolutions (edit as necessary according to when your design breaks, use as a rough guideline only)
	768px and larger | iPad portrait
	1024px and larger | iPad landscape
	1366px and larger | Small laptop
	1600px and larger | Medium laptop
	1920px and larger | Full HD laptop
	2560px and larger | Desktops

All the min-width media queries follow this pattern:

XXem (YYYpx) and larger
	XXpx Default
	XXpx Default Retina
	XXpx Portrait
	XXpx Portrait Retina




3. Utility Classes - solutions for common tasks or problems.
  3.1 - .hide-text for image replacements
  3.2 - .clearfix: to contain floats. Use if overflow: auto; on the parent element doesn't work well.
  3.3 - .currentpage: to highlight the current page in the navigation menu



4. Print Media Query
  4.1 Styles for the printed page (laser printer). Text should be black and interactive items set to display: none;

  */


/* ==========================================================================


   Mobile First Philosophy: Start by coding CSS for a small screen first (mobile phone) and make your way up to bigger screens. In order: mobile, tablet, desktop, HD.

   Baseline CSS for all size viewports.


   Write your default CSS rules here. They will apply ("cascade") to everything below.


   - - - -


 Use numbered sections to organize your CSS. Organize in a way you find intuitive.

 Code elements in the order you will see them on the page. Makes finding rules easier and faster.
 For example: html, body, header, nav, main, aside, footer. Etc.


1. Boxes
2. Backgrounds
3. Typography
4. Colors
5. NAV
6. Form
   ========================================================================== */

body {background-color: #eee;}
main {background-color: #fff; padding: 1em; border: 1px solid #444; width:95%; margin: 0 auto;}

img {max-width: 100%; height: auto;}













/* ---- 1. Boxes  -------  */




/* ---- 2. Backgrounds -------  */






/* ----  3. Typography ---- */




/* ----  4. Colors ---- */




/* ----  5. NAV ---- */

ul.navigation {display: none;}  /* On mobile, start by hiding the navigation list so you only see the hamburger icon */


/* Don't forget LoVeHA! Rule */



/* ----  6. Form ---- */

form > input, 
form > textarea, 
form > label {
    /* display: block; 
    margin: 0 0 1em 0; */
}  



 /* ========================== END MOBILE FIRST ===========================  */








/* ==========================================================================

	*****  START VISUAL MEDIA QUERIES *****

   Media Queries start here. Use them to tweak your design as the screen size gets bigger.

   If you want to change something that appears across all browser screen sizes, code it above, not below this section.

   Anything you write in the CSS stylesheet will inherited by ("cascade to") media queries written below.

   In other words, if your default paragraph color is blue (in the baseline CSS) and you set the paragraph color rule to red in the first media query, then the media queries written below will also display the text as red. You do not need to add the red rule again, it gets inherited.

   Remember, the last CSS rule wins.


   BOOTSTRAP BREAKPOINTS

    X-Small                 < 576px
    Small                   > 576px
    Medium                  > 768px
    Large                   > 992px
    Extra large             > 1200px
    Extra extra large       > 1400px


    BEST PRACTICES FOR CSS MEDIA QUERIES
    from: https://www.codeinwp.com/blog/how-to-use-css-media-queries/

    ‚ùå Don‚Äôt write media queries for specific device sizes like iPad, iPhone, etc. Write media queries according to how your layouts ‚Äòbreak‚Äô at different points (hence the term ‚Äúbreakpoints‚Äù). This means you‚Äôre allowing the content to define the breakpoints.

    üëç If possible, go with a mobile-first approach with your media queries where your non-media query CSS would apply to the smallest device, then add media queries for larger viewports as needed.

    üëç Take advantage of CSS layout features like flexbox and CSS grid to naturally create layouts that are responsive without the need for media queries, if possible.


   ========================================================================== */






/* ==========================================================================
   EXAMPLE: CSS for tablets (768px and above)  |  Feel free to duplicate and adjust as necessary.
   ========================================================================== */

@media only screen and (min-width: 768px) {

    /* Landscape CSS rules go here */

}



@media only screen and (min-width: 768px)  and (orientation : portrait) {

    /* CSS Portrait rules go here */

}









/* ================ END VISUAL MEDIA QUERIES =============== */



  /* ========== Utility Classes ========== */



  /*
      .hide-text for image replacements
      See: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
  */


.hide-text {
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
}


/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */



.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}


.currentpage {font-weight: bold; text-decoration: underline; color: #FC9;}






/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request: h5bp.com/r
   ========================================================================== */

@media print {

    nav {display: none;}

}

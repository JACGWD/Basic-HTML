/* ==========================================================================

  DEFAULT CSS version 0.94 BETA  

   CC0 1.0 Universal | This work has been marked as dedicated to the public domain.

    By marking the work with a CC0 public domain dedication, the creator is giving up their copyright and allowing reusers to distribute, remix, adapt, and build upon the material in any medium or format, even for commercial purposes.
  
    ========================================================================== */

/* ==========================================================================
*
*
*  0. Defaults to be loaded before anything else
*
*   0.1 @import rules
*       Place font @import rules at top of the CSS stylesheet. They will not work reliably if placed elsewhere in a CSS file.
*       Best practice is to use the <link> tag in the HTML <head> instead. 
*       @import rules slow down the browser.
*
   @import url();
*   
*   
*   0.2 Default font size
*
*/

  :root {
        /* font-size: 62.5%; /* Forces default font size to 10px to make calculating REMs easier. */
        font-size: 100%;  /* Default font size is standard 16px */

        /* 0.3 Custom color palette using CSS variables */

        --main-bg-color: white;
        --body-text-color: #444;
        --branding-main-color: #3366cc;
        --headers-color: #2d4169;
       
        /* Refer to the colors by name below. 
           Ex: h1 {color: var(--headers-color);} 
           See: https://www.w3schools.com/css/css3_variables.asp */
      }

  /*
  
 

  ========================================================================== */
/*

0. Defaults to be loaded before anything else
    0.1 @import rules
    0.2 Default font size
    o.3 Color palette

1. Mobile First - GLOBAL styles that apply to all screen sizes
	  1.1 - Boxes
	  1.2 - Backgrounds
	  1.3 - Typography
	  etc... arrange to your liking.

2. Media Queries - Set breakpoints according to your design's needs

  Resolutions (edit as necessary according to when your design breaks, use as a rough guideline only)
	768px and larger | iPad portrait
	1024px and larger | iPad landscape
	1366px and larger | Small laptop
	1600px and larger | Medium laptop
	1920px and larger | Full HD laptop
	2560px and larger | Desktops

All the min-width media queries follow this pattern:

XXem (YYYpx) and larger

	XXpx Default (Retina)
	XXpx Portrait (Retina)




3. Utility Classes - solutions for common tasks or problems.
  3.1 - .hide-text for image replacements
  3.2 - .clearfix: to contain floats. Use if overflow: auto; on the parent element doesn't work well.
  3.3 - .currentpage: to highlight the current page in the navigation menu



4. Print Media Query
  4.1 Styles for the printed page (laser printer). Text should be black and interactive items set to display: none;

  */

/* ==========================================================================
* 
* 1. MOBILE FIRST
*
*   Mobile First Philosophy: Start by coding CSS for a small screen first (mobile phone) and make your way up to bigger screens. In order: mobile, tablet, desktop, HD.
*
*   BASELINE CSS FOR ALL SIZE VIEWPORTS.
*
*
*   Write your default CSS rules here. They will apply ("cascade") to everything below.
*
*   Use numbered sections to organize your CSS. Organize in a way you find intuitive.
*
*   Code elements in the order you will see them on the page top to bottom. Makes finding rules easier and faster.
*   For example: html, body, header, nav, main, aside, footer. Etc.
*
*   0. Defaults
*   1. Boxes
*   2. Backgrounds
*   3. Typography
*   4. NAV
*   5. Form
*   6. Images
* 
   ========================================================================== */



/* ---- 1. MAIN BOXES  -------  */

    /* 

    body {}
    header {}
    nav {}
    .flex-wrapper {}
    main {}
    aside {}
    footer {} 

    */


/* ---- 2. BACKGROUNDS -------  */

/* ----  3. TYPOGRAPHY ---- */

/* 
    Use a typographic scale: 
    https://spencermortensen.com/articles/typographic-scale/
    https://typescale.com/ 
*/


/* ----  4. NAV ---- */

/* ON MOBILE, START BY HIDING THE NAVIGATION LIST SO YOU ONLY SEE THE HAMBURGER ICON 

ul.navigation {
  display: none;  
}
*/

/* DON'T FORGET LOVEHA! RULE

    a:link {}
    a:visited {}
    a:hover {}
    a:active {} 

*/


/* ----  5. FORM ---- */

/* 

    form > input,
    form > textarea,
    form > label { } 

*/


/* ----  6. IMAGES ---- */

img {
    max-width: 100%; /* Makes the image responsive */
    height: auto;    /* Maintains the proportions of the image, ie does not stretch or distort */
  }

/* ========================== END MOBILE FIRST ===========================  */




/* ==========================================================================
* 
*  2. MEDIA QUERIES
* 
*    Media Queries start here. Use them to tweak your design as the screen size gets bigger.
* 
*    If you want to change something that APPEARS ACROSS ALL BROWSER SCREEN SIZES, CODE IT ABOVE, NOT BELOW THIS SECTION.
* 
*    Anything you write in the CSS stylesheet will inherited by ("cascade to") media queries written below.
* 
*    In other words, if your default paragraph color is blue (in the baseline CSS) and you set the paragraph color rule to red in the first media query, then the media queries *    written below will also display the text as red. You do not need to add the red rule again, it gets inherited.
* 
*    Remember, the last CSS rule wins.
* 
* 
*    BOOTSTRAP BREAKPOINTS
* 
*     X-Small                 < 576px     Use max-width to design for anything smaller than 576px
*     Small                   > 576px     Use min-width to design for anything wider than 576px but smaller than 768px
*     Medium                  > 768px     Use min-width to design for anything wider than 768px but smaller than 992px
*     Large                   > 992px     Use min-width to design for anything wider than 992px but smaller than 1200px
*     Extra large             > 1200px    Use min-width to design for anything wider than 1200px but smaller than 1400px
*     Extra extra large       > 1400px    Use min-width to design for anything wider than 1400px 
*    
*     Add and modify as necessary...
* 
* 
*     BEST PRACTICES FOR CSS MEDIA QUERIES
*     from: https://www.codeinwp.com/blog/how-to-use-css-media-queries/
* 
*     ‚ùå Don‚Äôt write media queries for specific device sizes like iPad, iPhone, etc. Write media queries according to how your layouts ‚Äòbreak‚Äô at different points 
*       (hence the term ‚Äúbreakpoints‚Äù). This means you‚Äôre allowing the content to define the breakpoints.
* 
*     üëç If possible, go with a mobile-first approach with your media queries where your non-media query CSS would apply to the smallest device, 
*        then add media queries for larger viewports as needed.
* 
*     üëç Take advantage of CSS layout features like flexbox and CSS grid to naturally create layouts that are responsive without the need for media queries, if possible.
* 
* 
   ========================================================================== */




/* ==========================================================================
   EXAMPLE: CSS for tablets (768px and above)  |  Feel free to duplicate and adjust as necessary.
   ========================================================================== */

@media only screen and (min-width: 768px) {
  /* Landscape CSS rules go here */
}

@media only screen and (min-width: 768px) and (orientation: portrait) {
  /* CSS Portrait rules go here */
}


/* At the first viewport large enough to display your navigation properly, unhide the navigation list so you see the full menu 

ul.navigation {
  display: block;  
}

*/


/* ================ END VISUAL MEDIA QUERIES =============== */






/* ==========================================================================
*
* 3. Utility Classes 
* Useful hacks to solve design problems
*
============================================================================= */

/*
      .hide-text for image replacements
      See: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
           https://en.wikipedia.org/wiki/CSS_image_replacement
  */

.hide-text {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}


/*
 * Clearfix: Contain floats
 *
 * If you use float: left (or right), the parent element may not "wrap around" or "contain" the floating element
 * Use "overflow: auto;" on the parent to force the parent to wrap the float
 * Otherwise use the clearfix hack
 * See: https://www.w3schools.com/howto/howto_css_clearfix.asp
 */


.clearfix::before,
.clearfix::after {
  content: "";
  display: table;
}

.clearfix::after {
  clear: both;
}


/*
 * Current Page
 *
 * Highlight the current page in the navigation menu for better UX
 * For example, make the "contact" link bold, underlined and orange when on the web site's contact page
 * 
 */

.currentpage {
  font-weight: bold;
  text-decoration: underline;
  color: #fc9;
}



/* ==========================================================================
 *
 *  4.1 Print styles
 *  Remove interactive elements and colors for standard black and white printing
 *
   ========================================================================== */

@media print {
    *,
    *::before,
    *::after {
      background: #fff !important;
      color: #000 !important;
      /* Black prints faster */
      box-shadow: none !important;
      text-shadow: none !important;
    }

  nav {
    display: none;
  }
}
